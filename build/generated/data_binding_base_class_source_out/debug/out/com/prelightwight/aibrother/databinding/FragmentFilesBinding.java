// Generated by view binder compiler. Do not edit!
package com.prelightwight.aibrother.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.prelightwight.aibrother.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFilesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView analysisStatusText;

  @NonNull
  public final Button btnAnalyzeAll;

  @NonNull
  public final Button btnFileSettings;

  @NonNull
  public final Button btnManageStorage;

  @NonNull
  public final Button btnUploadFile;

  @NonNull
  public final ListView filesList;

  @NonNull
  public final TextView storageUsedText;

  @NonNull
  public final TextView uploadCountText;

  private FragmentFilesBinding(@NonNull LinearLayout rootView, @NonNull TextView analysisStatusText,
      @NonNull Button btnAnalyzeAll, @NonNull Button btnFileSettings,
      @NonNull Button btnManageStorage, @NonNull Button btnUploadFile, @NonNull ListView filesList,
      @NonNull TextView storageUsedText, @NonNull TextView uploadCountText) {
    this.rootView = rootView;
    this.analysisStatusText = analysisStatusText;
    this.btnAnalyzeAll = btnAnalyzeAll;
    this.btnFileSettings = btnFileSettings;
    this.btnManageStorage = btnManageStorage;
    this.btnUploadFile = btnUploadFile;
    this.filesList = filesList;
    this.storageUsedText = storageUsedText;
    this.uploadCountText = uploadCountText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFilesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFilesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_files, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFilesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.analysis_status_text;
      TextView analysisStatusText = ViewBindings.findChildViewById(rootView, id);
      if (analysisStatusText == null) {
        break missingId;
      }

      id = R.id.btn_analyze_all;
      Button btnAnalyzeAll = ViewBindings.findChildViewById(rootView, id);
      if (btnAnalyzeAll == null) {
        break missingId;
      }

      id = R.id.btn_file_settings;
      Button btnFileSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnFileSettings == null) {
        break missingId;
      }

      id = R.id.btn_manage_storage;
      Button btnManageStorage = ViewBindings.findChildViewById(rootView, id);
      if (btnManageStorage == null) {
        break missingId;
      }

      id = R.id.btn_upload_file;
      Button btnUploadFile = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadFile == null) {
        break missingId;
      }

      id = R.id.files_list;
      ListView filesList = ViewBindings.findChildViewById(rootView, id);
      if (filesList == null) {
        break missingId;
      }

      id = R.id.storage_used_text;
      TextView storageUsedText = ViewBindings.findChildViewById(rootView, id);
      if (storageUsedText == null) {
        break missingId;
      }

      id = R.id.upload_count_text;
      TextView uploadCountText = ViewBindings.findChildViewById(rootView, id);
      if (uploadCountText == null) {
        break missingId;
      }

      return new FragmentFilesBinding((LinearLayout) rootView, analysisStatusText, btnAnalyzeAll,
          btnFileSettings, btnManageStorage, btnUploadFile, filesList, storageUsedText,
          uploadCountText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
