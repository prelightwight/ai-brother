// Generated by view binder compiler. Do not edit!
package com.prelightwight.aibrother.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.prelightwight.aibrother.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBrainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnClearMemory;

  @NonNull
  public final Button btnMemorySettings;

  @NonNull
  public final Button btnMemoryStats;

  @NonNull
  public final Button btnViewMemory;

  @NonNull
  public final ListView conversationsList;

  @NonNull
  public final TextView lastActivityText;

  @NonNull
  public final TextView memoryCountText;

  @NonNull
  public final TextView memoryStatusText;

  private FragmentBrainBinding(@NonNull LinearLayout rootView, @NonNull Button btnClearMemory,
      @NonNull Button btnMemorySettings, @NonNull Button btnMemoryStats,
      @NonNull Button btnViewMemory, @NonNull ListView conversationsList,
      @NonNull TextView lastActivityText, @NonNull TextView memoryCountText,
      @NonNull TextView memoryStatusText) {
    this.rootView = rootView;
    this.btnClearMemory = btnClearMemory;
    this.btnMemorySettings = btnMemorySettings;
    this.btnMemoryStats = btnMemoryStats;
    this.btnViewMemory = btnViewMemory;
    this.conversationsList = conversationsList;
    this.lastActivityText = lastActivityText;
    this.memoryCountText = memoryCountText;
    this.memoryStatusText = memoryStatusText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBrainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBrainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_brain, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBrainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_clear_memory;
      Button btnClearMemory = ViewBindings.findChildViewById(rootView, id);
      if (btnClearMemory == null) {
        break missingId;
      }

      id = R.id.btn_memory_settings;
      Button btnMemorySettings = ViewBindings.findChildViewById(rootView, id);
      if (btnMemorySettings == null) {
        break missingId;
      }

      id = R.id.btn_memory_stats;
      Button btnMemoryStats = ViewBindings.findChildViewById(rootView, id);
      if (btnMemoryStats == null) {
        break missingId;
      }

      id = R.id.btn_view_memory;
      Button btnViewMemory = ViewBindings.findChildViewById(rootView, id);
      if (btnViewMemory == null) {
        break missingId;
      }

      id = R.id.conversations_list;
      ListView conversationsList = ViewBindings.findChildViewById(rootView, id);
      if (conversationsList == null) {
        break missingId;
      }

      id = R.id.last_activity_text;
      TextView lastActivityText = ViewBindings.findChildViewById(rootView, id);
      if (lastActivityText == null) {
        break missingId;
      }

      id = R.id.memory_count_text;
      TextView memoryCountText = ViewBindings.findChildViewById(rootView, id);
      if (memoryCountText == null) {
        break missingId;
      }

      id = R.id.memory_status_text;
      TextView memoryStatusText = ViewBindings.findChildViewById(rootView, id);
      if (memoryStatusText == null) {
        break missingId;
      }

      return new FragmentBrainBinding((LinearLayout) rootView, btnClearMemory, btnMemorySettings,
          btnMemoryStats, btnViewMemory, conversationsList, lastActivityText, memoryCountText,
          memoryStatusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
