// Generated by view binder compiler. Do not edit!
package com.prelightwight.aibrother.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.prelightwight.aibrother.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Switch autoBackupSwitch;

  @NonNull
  public final Spinner autoDeleteSpinner;

  @NonNull
  public final Button clearChatButton;

  @NonNull
  public final SeekBar creativitySeekbar;

  @NonNull
  public final TextView creativityValue;

  @NonNull
  public final Switch darkThemeSwitch;

  @NonNull
  public final Button exportDataButton;

  @NonNull
  public final SeekBar fontSizeSeekbar;

  @NonNull
  public final TextView fontSizeValue;

  @NonNull
  public final Switch localProcessingSwitch;

  @NonNull
  public final Switch memorySwitch;

  @NonNull
  public final Switch notificationsSwitch;

  @NonNull
  public final Button resetSettingsButton;

  @NonNull
  public final SeekBar responseSpeedSeekbar;

  @NonNull
  public final TextView responseSpeedValue;

  @NonNull
  public final Spinner responseStyleSpinner;

  @NonNull
  public final Switch roundedBubblesSwitch;

  @NonNull
  public final Button testSettingsButton;

  private FragmentSettingsBinding(@NonNull ScrollView rootView, @NonNull Switch autoBackupSwitch,
      @NonNull Spinner autoDeleteSpinner, @NonNull Button clearChatButton,
      @NonNull SeekBar creativitySeekbar, @NonNull TextView creativityValue,
      @NonNull Switch darkThemeSwitch, @NonNull Button exportDataButton,
      @NonNull SeekBar fontSizeSeekbar, @NonNull TextView fontSizeValue,
      @NonNull Switch localProcessingSwitch, @NonNull Switch memorySwitch,
      @NonNull Switch notificationsSwitch, @NonNull Button resetSettingsButton,
      @NonNull SeekBar responseSpeedSeekbar, @NonNull TextView responseSpeedValue,
      @NonNull Spinner responseStyleSpinner, @NonNull Switch roundedBubblesSwitch,
      @NonNull Button testSettingsButton) {
    this.rootView = rootView;
    this.autoBackupSwitch = autoBackupSwitch;
    this.autoDeleteSpinner = autoDeleteSpinner;
    this.clearChatButton = clearChatButton;
    this.creativitySeekbar = creativitySeekbar;
    this.creativityValue = creativityValue;
    this.darkThemeSwitch = darkThemeSwitch;
    this.exportDataButton = exportDataButton;
    this.fontSizeSeekbar = fontSizeSeekbar;
    this.fontSizeValue = fontSizeValue;
    this.localProcessingSwitch = localProcessingSwitch;
    this.memorySwitch = memorySwitch;
    this.notificationsSwitch = notificationsSwitch;
    this.resetSettingsButton = resetSettingsButton;
    this.responseSpeedSeekbar = responseSpeedSeekbar;
    this.responseSpeedValue = responseSpeedValue;
    this.responseStyleSpinner = responseStyleSpinner;
    this.roundedBubblesSwitch = roundedBubblesSwitch;
    this.testSettingsButton = testSettingsButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auto_backup_switch;
      Switch autoBackupSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoBackupSwitch == null) {
        break missingId;
      }

      id = R.id.auto_delete_spinner;
      Spinner autoDeleteSpinner = ViewBindings.findChildViewById(rootView, id);
      if (autoDeleteSpinner == null) {
        break missingId;
      }

      id = R.id.clear_chat_button;
      Button clearChatButton = ViewBindings.findChildViewById(rootView, id);
      if (clearChatButton == null) {
        break missingId;
      }

      id = R.id.creativity_seekbar;
      SeekBar creativitySeekbar = ViewBindings.findChildViewById(rootView, id);
      if (creativitySeekbar == null) {
        break missingId;
      }

      id = R.id.creativity_value;
      TextView creativityValue = ViewBindings.findChildViewById(rootView, id);
      if (creativityValue == null) {
        break missingId;
      }

      id = R.id.dark_theme_switch;
      Switch darkThemeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (darkThemeSwitch == null) {
        break missingId;
      }

      id = R.id.export_data_button;
      Button exportDataButton = ViewBindings.findChildViewById(rootView, id);
      if (exportDataButton == null) {
        break missingId;
      }

      id = R.id.font_size_seekbar;
      SeekBar fontSizeSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (fontSizeSeekbar == null) {
        break missingId;
      }

      id = R.id.font_size_value;
      TextView fontSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (fontSizeValue == null) {
        break missingId;
      }

      id = R.id.local_processing_switch;
      Switch localProcessingSwitch = ViewBindings.findChildViewById(rootView, id);
      if (localProcessingSwitch == null) {
        break missingId;
      }

      id = R.id.memory_switch;
      Switch memorySwitch = ViewBindings.findChildViewById(rootView, id);
      if (memorySwitch == null) {
        break missingId;
      }

      id = R.id.notifications_switch;
      Switch notificationsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitch == null) {
        break missingId;
      }

      id = R.id.reset_settings_button;
      Button resetSettingsButton = ViewBindings.findChildViewById(rootView, id);
      if (resetSettingsButton == null) {
        break missingId;
      }

      id = R.id.response_speed_seekbar;
      SeekBar responseSpeedSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (responseSpeedSeekbar == null) {
        break missingId;
      }

      id = R.id.response_speed_value;
      TextView responseSpeedValue = ViewBindings.findChildViewById(rootView, id);
      if (responseSpeedValue == null) {
        break missingId;
      }

      id = R.id.response_style_spinner;
      Spinner responseStyleSpinner = ViewBindings.findChildViewById(rootView, id);
      if (responseStyleSpinner == null) {
        break missingId;
      }

      id = R.id.rounded_bubbles_switch;
      Switch roundedBubblesSwitch = ViewBindings.findChildViewById(rootView, id);
      if (roundedBubblesSwitch == null) {
        break missingId;
      }

      id = R.id.test_settings_button;
      Button testSettingsButton = ViewBindings.findChildViewById(rootView, id);
      if (testSettingsButton == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, autoBackupSwitch, autoDeleteSpinner,
          clearChatButton, creativitySeekbar, creativityValue, darkThemeSwitch, exportDataButton,
          fontSizeSeekbar, fontSizeValue, localProcessingSwitch, memorySwitch, notificationsSwitch,
          resetSettingsButton, responseSpeedSeekbar, responseSpeedValue, responseStyleSpinner,
          roundedBubblesSwitch, testSettingsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
